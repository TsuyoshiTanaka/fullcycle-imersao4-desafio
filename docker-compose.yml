version: "3.8"

services:
  # keycloak:
  #   build: 
  #     context: ./.docker/keycloak
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8080:8080"
  #   environment:
  #     - KEYCLOAK_USER=admin
  #     - KEYCLOAK_PASSWORD=admin
  #     - DB_USER=root
  #     - DB_PASSWORD=root
  #     - DB_VENDOR=mysql
  #     - DB_ADDR=db_keycloak
  #     - DB_PORT=3306
  #     - DB_DATABASE=fin
  #   extra_hosts: 
  #     - "host.docker.internal:172.17.0.1"
  #   depends_on: 
  #     - db_keycloak

  # db_keycloak:
  #   build: 
  #     context: ./.docker/mysql_keycloak
  #     dockerfile: Dockerfile    
  #   restart: always
  #   tty: true
  #   volumes: 
  #     - ./.docker/mysql_keycloak/dbdata:/var/lib/mysql
  #   environment: 
  #     - MYSQL_DATABASE=fin
  #     - MYSQL_ROOT_PASSWORD=root

  db:
    build: 
      context: ./.docker/mysql
      dockerfile: Dockerfile
    command: --server-id=1 --log-bin=/var/lib/mysql/mysql-bin.log
    restart: always
    tty: true
    volumes: 
      - ./.docker/mysql/dbdata:/var/lib/mysql
    environment: 
      - MYSQL_DATABASE=fin
      - MYSQL_ROOT_PASSWORD=root

  # back:
  #   build: 
  #     context: ./nestjs-api
  #     dockerfile: Dockerfile    
  #   entrypoint: dockerize -wait tcp://db:3306 -timeout 40s ./.docker/entrypoint.sh
  #   ports:
  #     - 3000:3000
  #   volumes: 
  #     - ./nestjs-api:/home/node/app
  #   extra_hosts: 
  #     - "host.docker.internal:172.17.0.1"
  #   depends_on: 
  #     - db
  #     - kafka

  # front:
  #   build:
  #     context: ./nextjs-frontend
  #     dockerfile: Dockerfile 
  #   entrypoint: ./.docker/entrypoint.sh
  #   ports:
  #     - 3001:3000
  #   volumes:
  #     - ./nextjs-frontend:/home/node/app
  #   extra_hosts: 
  #     - "host.docker.internal:172.17.0.1"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 9094:9094
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://:9092,OUTSIDE://:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://host.docker.internal:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
    extra_hosts:
      - "host.docker.internal:172.17.0.1"
        
  control-center:
    image: confluentinc/cp-enterprise-control-center:6.0.1
    hostname: control-center
    depends_on:
      - kafka
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka:9092'
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_CONNECT_CLUSTER: http://kafka-connect:8083
      PORT: 9021
    extra_hosts:
      - "host.docker.internal:172.17.0.1"

  # kafka-topics-generator:
  #   image: confluentinc/cp-kafka:latest
  #   depends_on:
  #     - kafka
  #   command: >
  #     bash -c
  #       "sleep 5s &&
  #       kafka-topics --create --topic=reports-create --if-not-exists --bootstrap-server=kafka:9092 && 
  #       kafka-topics --create --topic=reports-generated --if-not-exists --bootstrap-server=kafka:9092"

  kafka-connect:
    image: confluentinc/cp-kafka-connect-base:6.0.0
    container_name: kafka-connect
    ports:
      - 8083:8083
    environment: 
      CONNECT_BOOTSTRAP_SERVERS: "host.docker.internal:9094"
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: kafka-connect
      CONNECT_CONFIG_STORAGE_TOPIC: _connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: _connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: _connect-status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
      CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
      CONNECT_LOG4J_LOGGERS: "org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR"
      CONNECT_LOG4J_APPENDER_STDOUT_LAYOUT_CONVERSIONPATTERN: "[%d] %p %X{connector.context}%m (%c:%L)%n"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: '1'
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: '1'
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: '1'
      CONNECT_PLUGIN_PATH: '/usr/share/java,/usr/share/confluent-hub-components/'
    volumes:
      - .docker/kafka/data:/data
    command:
      - bash
      - -c
      - |
        echo "Installing Connector"
        confluent-hub install --no-prompt confluentinc/kafka-connect-elasticsearch:10.0.1
        confluent-hub install --no-prompt debezium/debezium-connector-mysql:1.6.0
        #
        echo "Launching Kafka Connect worker"
        /etc/confluent/docker/run &
        #
        sleep infinity
    extra_hosts: 
      - "host.docker.internal:172.17.0.1"
  
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.1
    container_name: es01
    environment: 
      - node.name=es01
      - cluster.name=es-docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - http.cors.enabled=true
      - http.cors.allow-origin="*"
      - discovery.type=single-node
    ulimits: 
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./.docker/elasticsearch/data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    extra_hosts: 
      - "host.docker.internal:172.17.0.1"

  kibana:
    image: docker.elastic.co/kibana/kibana:7.14.1
    container_name: kib01
    ports:
      - 5601:5601
    environment: 
      ELASTICSEARCH_URL: http://es01:9200
      ELASTICSEARCH_HOSTS: '["http://es01:9200"]'
    extra_hosts: 
      - "host.docker.internal:172.17.0.1"
